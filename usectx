#!/usr/bin/env bash

# Helpers
prog_dir=$(dirname $(realpath "$0"))
. "$prog_dir/lib"

# Options
while getopts "h" opt; do
    case "$opt" in
	   h) cat <<EOF
usectx - Set a workspace to be used by default in the future.

USAGE

    usectx [-h] [WORKSPACE]

OPTIONS

    -h    Show this help text.

ARGUMENTS

    WORKSPACE    Name of workspace to set as the default workspace. If "-" is 
                 provided the default workspace will be cleared. If not provided
                 the default workspace is shown.

BEHAVIOR

    Records a workspace as being the default workspace. Then for any command which
    takes a workspace you can pass "@" and it will resolve to the workspace which
    you set.

    Passing "-" as WORKSPACE will clear the default workspace.

    Not passing any value for WORKSPACE will show the current default workspace.

EOF
		 exit 0
		 ;;
	   '?') die "Unknown option" ;;
    esac
done

# Arguments
shift $((OPTIND-1))

workspace="$1"
shift

# If show mode
if [ -z "$workspace" ]; then
    if [ -f "$DEFAULT_WORKSPACE_FILE" ]; then
	   cat "$DEFAULT_WORKSPACE_FILE"
    fi
else
    # Unset workspace if "-"
    if [[ "$workspace" == "-" ]]; then
	   if [ -f "$DEFAULT_WORKSPACE_FILE" ]; then
		  workspace=$(cat $DEFAULT_WORKSPACE_FILE)
		  check "Failed to get the name of the current default workspace"
		  
		  echo "Clearing workspace \"$workspace\" as default"
		  
		  rm "$DEFAULT_WORKSPACE_FILE"
		  check "Failed to unset the default workspace"
	   else
		  echo "No default workspace currently set"
	   fi
    else
	   workspace=$(resolve_alias "$workspace" noctx)
	   check "Failed to find the workspace"
	   
	   # Set default workspace
	   echo "$workspace" > "$DEFAULT_WORKSPACE_FILE"
	   check "Failed to set default workspace"

	   echo "Using workspace \"$workspace\" as default"
    fi
fi
