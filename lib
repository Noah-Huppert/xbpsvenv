#!/usr/bin/env bash
# Helpers
bold() {
    echo "$(tput bold)$@$(tput sgr0)"
}

boldf() {
    printf "$(tput bold)$@$(tput sgr0)"
}

check() {
    if [ "$?" -ne "0" ]; then
	   die "$@"
    fi
}

die() {
    echo "Error: $@" >&2
    exit 1
}

prog_dir=$(dirname $(realpath "$0"))

WORKSPACES_DIR="$HOME/.local/share/xbpsvenv"
WORKSPACES_TRASH_DIR="$WORKSPACES_DIR/.workspaces-trash"
REMOTE_BASES_DIR="$WORKSPACES_DIR/.remotes"
NOTES_DIR="$WORKSPACES_DIR/.notes"
ALIASES_DIR="$WORKSPACES_DIR/.aliases"
DEFAULT_WORKSPACE_FILE="$WORKSPACES_DIR/.default-workspace"

mkdir -p "$WORKSPACES_DIR"
check "Failed to create workspaces directory"

mkdir -p "$WORKSPACES_TRASH_DIR"
check "Failed to create workspaces trash directory"

mkdir -p "$NOTES_DIR"
check "Failed to create workspaces notes directory"

mkdir -p "$ALIASES_DIR"
check "Failed to create workspaces aliases directory"

resolve_alias() { # ( alias, flags ), stdout = workspace name
    # flags can contain multiple of the following substrings:
    # - nodie: Don't die for any reason
    # - notfoundreturn: If a workspace is not found return the alias value provided.
    # - noctx: Doesn't allow the "@" to substitute in for the default workspace.
    
    # Arguments
    alias="$1"
    shift
    if [ -z "$alias" ]; then
	   return 1
    fi

    flags="$1"
    shift

    # Check for default workspace
    if [[ "$alias" == "@" ]]; then
	   if ! echo "$flags" | grep "noctx" &> /dev/null; then
		  if [ -f "$DEFAULT_WORKSPACE_FILE" ]; then
			 cat "$DEFAULT_WORKSPACE_FILE"
			 return 0
		  fi
	   fi
    fi

    # Check for workspaces with name
    if ls "$WORKSPACES_DIR"/* &> /dev/null; then
	   for f in $(ls -d "$WORKSPACES_DIR"/*); do
		  if [[ $(basename "$f") == "$alias" ]]; then
			 basename "$f"
			 return 0
		  fi
	   done
    fi

    # Check for aliases with name
    if ls "$ALIASES_DIR"/* &> /dev/null; then
	   for f in $(ls "$ALIASES_DIR"/*); do
		  if [[ $(cat "$f") == "$alias" ]]; then
			 basename "$f"
			 return 0
		  fi
	   done
    fi

    # If haven't returned by this point there is no workspace with
    # a matching name or alias.
    if echo "$flags" | grep notfoundreturn &> /dev/null; then
	   echo "$alias"
    elif ! echo "$flags" | grep nodie &> /dev/null; then
	   die "Workspace with name or alias \"$alias\" not found"
    fi
}
